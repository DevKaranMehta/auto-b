services:
  traefik:
    image: "traefik:v2.10"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true" 
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web

  blockchain-news:
    build: .
    restart: always
    environment:
      - "DATABASE_URL=postgresql://n8n_user:7661607468AAHE5Xc97%40123%3F%3F@postgres:5432/blockchain_news_db"
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=blockchain-latest-news-secret-key-2025
      - ENVIRONMENT=production
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=blockchain2025
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.blockchain-http.rule=Host(`blockchainlatestnews.com`)"
      - "traefik.http.routers.blockchain-http.entrypoints=web"
      - "traefik.http.routers.blockchain-http.middlewares=redirect-to-https"
      - "traefik.http.routers.blockchain-https.rule=Host(`blockchainlatestnews.com`)"
      - "traefik.http.routers.blockchain-https.entrypoints=websecure"
      - "traefik.http.routers.blockchain-https.tls.certresolver=mytlschallenge"
      - "traefik.http.services.blockchain.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    networks:
      - web
      - default
    depends_on:
      - postgres

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.n8n.rule=Host(`n8n.srv922004.hstgr.cloud`)"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.entrypoints=web,websecure"
      - "traefik.http.routers.n8n.tls.certresolver=mytlschallenge"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.services.n8n.loadbalancer.responseForwarding.flushInterval=1s"
    environment:
      - N8N_HOST=n8n.srv922004.hstgr.cloud
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.srv922004.hstgr.cloud/
      - GENERIC_TIMEZONE=UTC
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - web
      - default
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: blockchain_news_db
      POSTGRES_USER: n8n_user
      POSTGRES_PASSWORD: "7661607468AAHE5Xc97@123??"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /srv/blockchain-platform/init_blockchain_db.sql:/docker-entrypoint-initdb.d/02-init-blockchain.sql
    networks:
      - default

networks:
  web:
    external: true
  default:

volumes:
  traefik_data:
    external: true
  n8n_data:
    external: true
  postgres_data:
